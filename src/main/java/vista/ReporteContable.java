/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package vista;

import Controlador.Conexion;
import Controlador.Options;
import java.awt.BorderLayout;
import java.awt.Cursor;
import java.awt.GraphicsEnvironment;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JPanel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Farmacia-Ingeniero
 */
public class ReporteContable extends javax.swing.JDialog {

    /**
     * Creates new form ReporteContable
     */
    public ReporteContable(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jLabel4.setVisible(false);
        cbnomape.setVisible(false);
        cargaDatosCopere();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cbregcontable = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbnomape = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cbtipo = new javax.swing.JComboBox<>();
        dcannio = new com.toedter.calendar.JYearChooser();
        jLabel6 = new javax.swing.JLabel();
        btnimprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REPORTE CONTABLE");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jLabel2.setText("Reg. Contable:");

        cbregcontable.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        cbregcontable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Copere", "Caja de Pensiones", "Oprefa" }));
        cbregcontable.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbregcontableItemStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jLabel4.setText("Nombres Apellidos:");

        cbnomape.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        cbnomape.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbnomapeItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jLabel5.setText("Tipo de Reporte");

        cbtipo.setFont(new java.awt.Font("Roboto", 0, 13)); // NOI18N
        cbtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "Especifico" }));
        cbtipo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbtipoItemStateChanged(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        jLabel6.setText("AÃ±o:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cbregcontable, 0, 389, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbtipo, 0, 389, Short.MAX_VALUE))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbnomape, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcannio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbregcontable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcannio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbnomape))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnimprimir.setFont(new java.awt.Font("Roboto", 1, 13)); // NOI18N
        btnimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/imprimir.png"))); // NOI18N
        btnimprimir.setText("Imprimir");
        btnimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnimprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnimprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnimprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbregcontableItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbregcontableItemStateChanged
        switch (cbregcontable.getSelectedItem().toString()) {
            case "Copere":
                cargaDatosCopere();
                break;
            case "Caja de Pensiones":
                cargaDatosCaja();
                break;
            case "Oprefa":
                cargaDatosOprefa();
                break;
        }
    }//GEN-LAST:event_cbregcontableItemStateChanged

    private void cbnomapeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbnomapeItemStateChanged

    }//GEN-LAST:event_cbnomapeItemStateChanged

    private void btnimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnimprimirActionPerformed
        int annio = dcannio.getYear(), idPersonal = Integer.parseInt(((Options) cbnomape.getSelectedItem()).getValue());
        String regcont = cbregcontable.getSelectedItem().toString().toUpperCase();
        if (cbtipo.getSelectedItem().toString().equals("General")) {
            imprimirReporteGeneral(regcont, annio);
        } else {
            imprimirReporteEspecifico(regcont, annio, idPersonal);
        }
    }//GEN-LAST:event_btnimprimirActionPerformed

    private void cbtipoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbtipoItemStateChanged
        if (cbtipo.getSelectedItem().toString().equals("General")) {
            jLabel4.setVisible(false);
            cbnomape.setVisible(false);
        } else {
            jLabel4.setVisible(true);
            cbnomape.setVisible(true);
        }
    }//GEN-LAST:event_cbtipoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteContable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReporteContable dialog = new ReporteContable(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnimprimir;
    private javax.swing.JComboBox cbnomape;
    private javax.swing.JComboBox<String> cbregcontable;
    private javax.swing.JComboBox<String> cbtipo;
    private com.toedter.calendar.JYearChooser dcannio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    private void imprimirReporteGeneral(String tipo, int annio) {
        try {
            btnimprimir.setEnabled(false);
            setCursor(new Cursor(Cursor.WAIT_CURSOR));

            JasperReport report = null;

            switch (cbregcontable.getSelectedItem().toString()) {
                case "Copere":
                    report = JasperCompileManager.compileReport(System.getProperty("user.dir") + "/reportes/ReporteGeneralCopere.jrxml");
                    break;
                case "Caja de Pensiones":
                    report = JasperCompileManager.compileReport(System.getProperty("user.dir") + "/reportes/ReporteGeneralCaja.jrxml");
                    break;
                case "Oprefa":
                    report = JasperCompileManager.compileReport(System.getProperty("user.dir") + "/reportes/ReporteGeneralOprefa.jrxml");
                    break;
            }

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("REPORT_LOCALE", new Locale("es", "ES"));
            parameters.put("AÃ±o", annio);
            parameters.put("Tipo", tipo);
            JasperPrint print = JasperFillManager.fillReport(report, parameters, Conexion.getConnection());
            JasperViewer viewer = new JasperViewer(print, false);

            JPanel panel = new JPanel(new BorderLayout());
            panel.add(viewer.getContentPane(), BorderLayout.CENTER);

            GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
            Rectangle bounds = env.getMaximumWindowBounds();

            JDialog dialog = new JDialog();
            dialog.setTitle("Reporte General - Registro Contable");
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.setModal(true);
            dialog.setSize(bounds.width, bounds.height);
            dialog.setLocationRelativeTo(null);
            dialog.getContentPane().add(panel);
            btnimprimir.setEnabled(true);
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            dialog.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(Flujo_Caja.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReporteContable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void imprimirReporteEspecifico(String tipo, int annio, int idPersonal) {
        try {
            btnimprimir.setEnabled(false);
            setCursor(new Cursor(Cursor.WAIT_CURSOR));

            JasperReport report = null;

            switch (cbregcontable.getSelectedItem().toString()) {
                case "Copere":
                    report = JasperCompileManager.compileReport(System.getProperty("user.dir") + "/reportes/ReporteEspecificoCopere.jrxml");
                    break;
                case "Caja de Pensiones":
                    report = JasperCompileManager.compileReport(System.getProperty("user.dir") + "/reportes/ReporteEspecificoCaja.jrxml");
                    break;
                case "Oprefa":
                    report = JasperCompileManager.compileReport(System.getProperty("user.dir") + "/reportes/ReporteEspecificoOprefa.jrxml");
                    break;
            }

            Map<String, Object> parameters = new HashMap<>();
            parameters.put("REPORT_LOCALE", new Locale("es", "ES"));
            parameters.put("AÃ±o", annio);
            parameters.put("Tipo", tipo);
            parameters.put("idPersonal", idPersonal);
            JasperPrint print = JasperFillManager.fillReport(report, parameters, Conexion.getConnection());
            JasperViewer viewer = new JasperViewer(print, false);

            JPanel panel = new JPanel(new BorderLayout());
            panel.add(viewer.getContentPane(), BorderLayout.CENTER);

            GraphicsEnvironment env = GraphicsEnvironment.getLocalGraphicsEnvironment();
            Rectangle bounds = env.getMaximumWindowBounds();

            JDialog dialog = new JDialog();
            dialog.setTitle("Reporte General - Registro Contable");
            dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            dialog.setModal(true);
            dialog.setSize(bounds.width, bounds.height);
            dialog.setLocationRelativeTo(null);
            dialog.getContentPane().add(panel);
            btnimprimir.setEnabled(true);
            setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
            dialog.setVisible(true);

        } catch (JRException ex) {
            Logger.getLogger(Flujo_Caja.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReporteContable.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargaDatosCopere() {
        try {
            Connection con = Conexion.getConnection();
            Statement stmt = con.createStatement();

            String query = "SELECT pe.IdPersonal, CONCAT(pe.A_Paterno, ' ', pe.A_Materno, ' ', pe.Nombres) AS Nomape "
                    + "FROM EstructuraCopere ec "
                    + "INNER JOIN Personal AS pe ON ec.Numero_CIP = pe.NroCip ORDER BY Nomape";
            ResultSet rs = stmt.executeQuery(query);
            cbnomape.removeAllItems();
            cbnomape.addItem(new Options("9999", "<<Seleccionar>>"));
            while (rs.next()) {
                cbnomape.addItem(new Options(rs.getString(1), rs.getString(2)));
            }

            rs.close();
            stmt.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace(); // Manejo de excepciones
        }
    }

    private void cargaDatosCaja() {
        try {
            Connection con = Conexion.getConnection();
            Statement stmt = con.createStatement();

            String query = "select pe.IdPersonal, CONCAT(pe.A_Paterno, ' ', pe.A_Materno, ' ', pe.Nombres) AS Nomape from EstructuraCajaPensiones ecp "
                    + "inner join Personal as pe on ecp.Codigo_CIP = pe.NroCip ORDER BY Nomape";
            ResultSet rs = stmt.executeQuery(query);

            cbnomape.removeAllItems();
            cbnomape.addItem(new Options("9999", "<<Seleccionar>>"));
            while (rs.next()) {
                cbnomape.addItem(new Options(rs.getString(1), rs.getString(2)));
            }

            // Cerrar la conexiÃ³n
            rs.close();
            stmt.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace(); // Manejo de excepciones
        }
    }

    private void cargaDatosOprefa() {
        try {
            // Establecer la conexiÃ³n a la base de datos
            Connection con = Conexion.getConnection();
            Statement stmt = con.createStatement();

            // Ejecutar la consulta
            String query = "select pe.IdPersonal, CONCAT(pe.A_Paterno, ' ', pe.A_Materno, ' ', pe.Nombres) AS Nomape from EstructuraOprefa eo "
                    + "inner join Personal as pe on eo.DNI = pe.Dni ORDER BY Nomape";
            ResultSet rs = stmt.executeQuery(query);

            // Limpiar el JComboBox antes de agregar nuevos elementos
            cbnomape.removeAllItems();
            // Agregar la opciÃ³n <<Seleccionar>>
            cbnomape.addItem(new Options("9999", "<<Seleccionar>>"));
            // Llenar el JComboBox con los resultados
            while (rs.next()) {
                cbnomape.addItem(new Options(rs.getString(1), rs.getString(2)));
            }

            // Cerrar la conexiÃ³n
            rs.close();
            stmt.close();
            con.close();
        } catch (SQLException e) {
            e.printStackTrace(); // Manejo de excepciones
        }
    }
}
